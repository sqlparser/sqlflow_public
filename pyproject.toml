[tool.poetry]
name = "sqlflow-client"
version = "0.1.0"
description = "SQLFlow client library and documentation"
authors = ["SQLFlow Team"]
readme = "README.md"
packages = [{include = "api"}]

[tool.poetry.dependencies]
python = "^3.8"
mkdocs = "^1.5.3"
mkdocs-material = "^9.4.8"
pymdown-extensions = "^10.3.1"
pygments = "^2.16.1"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"

[tool.poetry.scripts]
test = "pytest:main"
tests = "pytest:main"

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-ra",
    "--strict-markers",
    "--cov=api",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-report=term-missing",
    "--cov-fail-under=0",  # Set to 0 for infrastructure validation, change to 80 when adding real tests
    "-v"
]
markers = [
    "unit: marks tests as unit tests (fast, isolated)",
    "integration: marks tests as integration tests (may require external resources)",
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning"
]

[tool.coverage.run]
source = ["api"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/site-packages/*",
    "*/dist/*",
    "*/build/*",
    "*/.venv/*",
    "*/venv/*",
    "*/.tox/*",
    "*/.pytest_cache/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "if typing.TYPE_CHECKING:"
]
show_missing = true
precision = 2
fail_under = 0  # Set to 0 for infrastructure validation, change to 80 when adding real tests

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"